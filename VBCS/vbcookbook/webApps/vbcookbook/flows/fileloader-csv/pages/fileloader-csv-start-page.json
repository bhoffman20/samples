{

  "title": "",
  "description": "",
  "variables": {
    "boFormValid": {
      "type": "string"
    },
    "boOp": {
      "type": "string",
      "defaultValue": "upsert"
    },
    "boOpModeOptionsDP": {
      "type": "vb/ArrayDataProvider2",
      "defaultValue": {
        "data": [{
            "label": "Upsert",
            "value": "upsert"
          },
          {
            "label": "Create",
            "value": "create"
          }
        ],
        "itemType": "object",
        "keyAttributes": "value"
      }
    },
    "boPath": {
      "type": "string",
      "defaultValue": "/Employee"
    },
    "boPathOptionsDP": {
      "type": "vb/ArrayDataProvider2",
      "defaultValue": {
        "data": [{
            "label": "Employee",
            "value": "/Employee"
          },
          {
            "label": "Country",
            "value": "/Country"
          },
          {
            "label": "Department",
            "value": "/Department"
          },
          {
            "label": "Skill",
            "value": "/Skill"
          },
          {
            "label": "Job",
            "value": "/Job"
          },
          {
            "label": "JobHistory",
            "value": "/JobHistory"
          }, {
            "label": "Location",
            "value": "/Location"
          }, {
            "label": "Region",
            "value": "/Region"
          }
        ],
        "itemType": "object",
        "keyAttributes": "value"
      }
    },
    "columns": {
      "type": "object[]"
    },
    "current": {
      "type": {
        "hasfileLoaded": "boolean",
        "name": "string",
        "size": "number",
        "type": "string"
      },
      "defaultValue": {
        "size": 0
      }
    },
    "error": {
      "type": "any"
    },
    "isUploadingToBo": {
      "type": "boolean"
    },
    "uploadDataADP": {
      "type": "vb/ArrayDataProvider2",
      "defaultValue": {
        "itemType": "any",
        "keyAttributes": [
          "id"
        ]
      }
    }
  },
  "metadata": {},
  "types": {
    "upload": {
      "error": {
        "detail": "string"
      },
      "result": {
        "columns": "object[]",
        "name": "string",
        "size": "number",
        "tableData": "object[]",
        "type": "string"
      },
      "success": "boolean"
    }
  },
  "chains": {
    "BoConfigActionChain": {
      "root": "openBoConfigDialog",
      "description": "",
      "actions": {
        "openBoConfigDialog": {
          "module": "vb/action/builtin/callComponentMethodAction",
          "parameters": {
            "component": "{{ document.getElementById('oj-dialog--1728153767-1') }}",
            "method": "open"
          }
        }
      }
    },
    "FilePickerSelectChain": {
      "description": "",
      "root": "resetCurrent",
      "actions": {
        "readFile": {
          "module": "vb/action/builtin/callModuleFunctionAction",
          "parameters": {
            "module": "[[ $functions ]]",
            "functionName": "readAndProcess",
            "params": [
              "{{ $variables.files }}"
            ],
            "returnType": "upload"
          },
          "outcomes": {
            "success": "ifSuccess"
          }
        },
        "resetCurrent": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.current": {
              "reset": "toDefault"
            }
          },
          "outcomes": {
            "success": "readFile"
          }
        },
        "ifSuccess": {
          "module": "vb/action/builtin/ifAction",
          "parameters": {
            "condition": "[[ $chain.results.readFile.success ]]"
          },
          "outcomes": {
            "true": "assignVariables",
            "false": "failure"
          }
        },
        "assignVariables": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.uploadDataADP": {
              "source": {
                "data": "{{ $chain.results.readFile.result.tableData }}"
              },
              "reset": "none",
              "auto": "always",
              "mapping": {
                "$target.data": {
                  "source": "$source.data",
                  "reset": "empty"
                }
              }
            },
            "$page.variables.columns": {
              "source": "{{ $chain.results.readFile.result.columns }}"
            },
            "$page.variables.current.hasfileLoaded": {
              "source": true
            },
            "$page.variables.current": {
              "source": {
                "name": "{{ $chain.results.readFile.result.name }}",
                "size": "{{ $chain.results.readFile.result.size }}",
                "type": "{{ $chain.results.readFile.result.type }}"
              },
              "reset": "none",
              "auto": "always"
            }
          }
        },
        "failure": {
          "module": "vb/action/builtin/fireNotificationEventAction",
          "parameters": {
            "target": "leaf",
            "summary": "[[ $chain.results.readFile.error.detail ]]"
          },
          "outcomes": {
            "success": "resetCurrentOnFailure"
          }
        },
        "resetCurrentOnFailure": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.current": {
              "reset": "toDefault"
            }
          }
        }
      },
      "variables": {
        "files": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        }
      }
    },
    "UploadActionChain": {
      "description": "",
      "root": "callBatchEndpoint",
      "actions": {
        "callBatchEndpoint": {
          "module": "vb/action/builtin/restAction",
          "parameters": {
            "endpoint": "businessObjects/batch",
            "body": "{{ $variables.payload }}"
          },
          "outcomes": {
            "failure": "failure",
            "success": "success"
          }
        },
        "success": {
          "module": "vb/action/builtin/fireNotificationEventAction",
          "parameters": {
            "target": "leaf",
            "summary": "Upload success",
            "displayMode": "transient",
            "type": "confirmation"
          },
          "outcomes": {
            "success": "callComponentMethod1"
          }
        },
        "callComponentMethod1": {
          "module": "vb/action/builtin/callComponentMethodAction",
          "parameters": {
            "component": "{{ document.getElementById('oj-dialog--1728153767-2') }}",
            "method": "close"
          }
        },
        "failure": {
          "module": "vb/action/builtin/fireNotificationEventAction",
          "parameters": {
            "target": "leaf",
            "summary": "[[ $chain.results.callBatchEndpoint.message.summary ]]",
            "type": "error",
            "displayMode": "persist"
          }
        }
      },
      "variables": {
        "payload": {
          "type": "object",
          "required": true,
          "input": "fromCaller"
        }
      }
    },
    "ValidateAndUploadActionChain": {
      "description": "",
      "root": "ifValid",
      "actions": {
        "callComponentMethod1": {
          "module": "vb/action/builtin/callComponentMethodAction",
          "parameters": {
            "component": "{{ document.getElementById('bo-config-tacker') }}",
            "method": "showMessages"
          },
          "outcomes": {
            "success": "callComponentMethod2"
          }
        },
        "callComponentMethod2": {
          "module": "vb/action/builtin/callComponentMethodAction",
          "parameters": {
            "component": "{{ document.getElementById('bo-config-tacker') }}",
            "method": "focusOn",
            "params": [
              "@firstInvalidShown"
            ]
          }
        },
        "assignVariables2": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.isUploadingToBo": {
              "source": false
            }
          }
        },
        "boPayload": {
          "module": "vb/action/builtin/callModuleFunctionAction",
          "outcomes": {
            "success": "uploadAction"
          },
          "parameters": {
            "module": "[[ $functions ]]",
            "functionName": "preparePayload",
            "params": [
              "{{ $page.variables.uploadDataADP.data }}",
              "{{ $page.variables.boPath }}",
              "{{ $page.variables.boOp }}"
            ]
          }
        },
        "ifValid": {
          "module": "vb/action/builtin/ifAction",
          "parameters": {
            "condition": "[[ $page.variables.boFormValid === 'valid' ]]"
          },
          "outcomes": {
            "false": "callComponentMethod1",
            "true": "closeDialog"
          }
        },
        "closeDialog": {
          "module": "vb/action/builtin/callComponentMethodAction",
          "outcomes": {
            "success": "setUploadFlag"
          },
          "parameters": {
            "component": "{{ document.getElementById('oj-dialog--1728153767-1') }}",
            "method": "close"
          }
        },
        "setUploadFlag": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.isUploadingToBo": {
              "source": true
            }
          },
          "outcomes": {
            "success": "boPayload"
          }
        },
        "uploadAction": {
          "module": "vb/action/builtin/callChainAction",
          "parameters": {
            "id": "UploadActionChain",
            "params": {
              "payload": "{{ $chain.results.boPayload }}"
            }
          },
          "outcomes": {
            "success": "assignVariables2"
          }
        }
      },
      "variables": {
        "detail": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        }
      }
    },
    "GetSampleActionChain": {
      "description": "",
      "root": "getSampleCsvPath",
      "actions": {
        "getSampleCsvPath": {
          "module": "vb/action/builtin/callModuleFunctionAction",
          "parameters": {
            "module": "[[ $functions ]]",
            "functionName": "getSampleCsvPath"
          },
          "outcomes": {
            "success": "downloadSampleCsv"
          }
        },
        "downloadSampleCsv": {
          "module": "vb/action/builtin/openUrlAction",
          "parameters": {
            "url": "[[ $chain.results.getSampleCsvPath ]]",
            "windowName": "_blank"
          }
        }
      },
      "variables": {
        "detail": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        }
      }
    },
    "ResetActionChain": {
      "description": "",
      "root": "resetVariables",
      "actions": {
        "resetVariables": {
          "module": "vb/action/builtin/resetVariablesAction",
          "parameters": {
            "variables": [
              "$page.variables.current",
              "$page.variables.uploadDataADP",
              "$page.variables.isUploadingToBo",
              "$page.variables.error"
            ]
          }
        }
      },
      "variables": {
        "detail": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        }
      }
    }
  },
  "eventListeners": {
    "ojButtonOjAction": {
      "chains": [{
        "chainId": "BoConfigActionChain",
        "parameters": {}
      }]
    },
    "ojButtonOjAction2": {
      "chains": [{
        "chainId": "ResetActionChain",
        "parameters": {
          "detail": "{{ $event.detail }}"
        }
      }]
    },
    "ojButtonOjAction3": {
      "chains": [{
        "chainId": "GetSampleActionChain",
        "parameters": {
          "detail": "{{ $event.detail }}"
        }
      }]
    },
    "ojButtonOjAction4": {
      "chains": [{
        "chainId": "ValidateAndUploadActionChain",
        "parameters": {
          "detail": "{{ $event.detail }}"
        }
      }]
    },
    "ojFilePickerOjSelect": {
      "chains": [{
        "chainId": "FilePickerSelectChain",
        "parameters": {
          "files": "{{ $event.detail.files }}"
        }
      }]
    }
  },
  "imports": {
    "components": {
      "oj-toolbar": {
        "path": "ojs/ojtoolbar"
      },
      "oj-table": {
        "path": "ojs/ojtable"
      },
      "oj-file-picker": {
        "path": "ojs/ojfilepicker"
      },
      "oj-button": {
        "path": "ojs/ojbutton"
      },
      "oj-message": {
        "path": "ojs/ojmessage"
      },
      "oj-dialog": {
        "path": "ojs/ojdialog"
      },
      "oj-form-layout": {
        "path": "ojs/ojformlayout"
      },
      "oj-select-single": {
        "path": "ojs/ojselectsingle"
      },
      "oj-validation-group": {
        "path": "ojs/ojvalidationgroup"
      },
      "oj-progress-bar": {
        "path": "ojs/ojprogress-bar"
      },
      "oj-text-area": {
        "path": "ojs/ojinputtext"
      }
    }
  }
}