{

  "title": "  ",
  "description": "",
  "variables": {
    "employeesADP": {
      "type": "vb/ArrayDataProvider2",
      "defaultValue": {
        "itemType": "EmployeeType",
        "keyAttributes": "id"
      }
    },
    "jobListSDP": {
      "type": "vb/ServiceDataProvider",
      "defaultValue": {
        "endpoint": "businessObjects/getall_Job",
        "keyAttributes": "id",
        "itemsPath": "items",
        "responseType": "page:getallJobResponse",
        "transformsContext": {
          "vb-textFilterAttributes": [
            "jobTitle"
          ]
        }
      }
    },
    "currentRowBuffer": {
      "type": "EmployeeType",
      "defaultValue": {
        "jobObject": {
          "items": [
            {
              "jobTitle": ""
            }
          ]
        },
        "job": 0
      }
    },
    "disableRowEditExit": {
      "type": "boolean",
      "defaultValue": false
    },
    "rowStatus": {
      "type": "object"
    },
    "scrollPosition": {
      "type": "any"
    },
    "editRow": {
      "type": "any"
    }
  },
  "metadata": {},
  "types": {
    "EmployeeType": {
      "commissionPct": "number",
      "department": "number",
      "departmentObject": {
        "items": [{
          "departmentName": "string"
        }]
      },
      "email": "string",
      "firstName": "string",
      "hireDate": "string",
      "id": "number",
      "job": "number",
      "jobObject": {
        "items": [{
          "jobTitle": "string",
          "maxSalary": "number",
          "minSalary": "number"
        }]
      },
      "lastName": "string",
      "manager": "number",
      "phoneNumber": "string",
      "salary": "number"
    },
    "@decorators.EmployeeType": {
      "endpoint": "get_Employee",
      "service": "businessObjects",
      "path": "response"
    },
    "@decorators.getall_Employee": {
      "endpoint": "getall_Employee",
      "service": "businessObjects",
      "path": "response"
    },
    "getall_Employee": {
      "items": "EmployeeType[]"
    },
    "getallJobResponse": {
      "items": [{
        "id": "number",
        "jobTitle": "string"
      }]
    },
    "@decorators.getallJobResponse": {
      "endpoint": "getall_Job",
      "service": "businessObjects",
      "path": "response"
    }
  },
  "chains": {
    "TableBeforeRowEditChain": {
      "description": "",
      "variables": {

        "rowData": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        }
      },
      "root": "updateCurrentRowBuffer",
      "actions": {
        "updateCurrentRowBuffer": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.currentRowBuffer": {
              "source": "{{ $chain.variables.rowData }}",
              "auto": "always",
              "reset": "empty"
            }
          }
        }
      }
    },
    "TableBeforeRowEditEndChain": {
      "description": "",
      "variables": {

        "rowKey": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        },
        "rowData": {
          "type": "EmployeeType",
          "required": true,
          "input": "fromCaller"
        },
        "event": {
          "type": "any",
          "required": true,
          "input": "fromCaller"
        },
        "originalRowData": {
          "type": "EmployeeType",
          "required": true,
          "input": "fromCaller"
        }
      },
      "root": "checkWhetherEventIsBeingIgnored",
      "actions": {
        "markRowUpdated": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.rowStatus[$chain.variables.rowKey]": {
              "source": "modified"
            }
          }
        },
        "checkWhetherEventIsBeingIgnored": {
          "module": "vb/action/builtin/ifAction",
          "parameters": {
            "condition": "[[ $page.variables.disableRowEditExit || !$page.functions.isFormValid($chain.variables.event.detail, $chain.variables.event) || $chain.variables.event.detail.cancelEdit ]]"
          },
          "outcomes": {
            "false": "hasRecordChanged"
          }
        },
        "hasRecordChanged": {
          "module": "vb/action/builtin/ifAction",
          "parameters": {
            "condition": "{{ $page.functions.areDifferent($chain.variables.rowData, $chain.variables.originalRowData) }}"
          },
          "outcomes": {
            "true": "updateDPWithChanges"
          }
        },
        "updateDPWithChanges": {
          "module": "vb/action/builtin/fireDataProviderEventAction",
          "parameters": {
            "target": "[[ $page.variables.employeesADP ]]",
            "update": {
              "keys": "{{ [ $chain.variables.rowData.id ] }}",
              "data": "{{ [ $chain.variables.rowData ] }}"
            }
          },
          "outcomes": {
            "success": "isFirstRowChange"
          }
        },
        "isFirstRowChange": {
          "module": "vb/action/builtin/ifAction",
          "parameters": {
            "condition": "{{ $page.variables.rowStatus[$chain.variables.rowKey] === undefined }}"
          },
          "outcomes": {
            "true": "markRowUpdated"
          }
        }
      }
    },
    "JobChanged": {
      "description": "",
      "variables": {
        "value": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        },
        "key": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        },
        "index": {
          "required": true,
          "type": "number",
          "input": "fromCaller"
        },
        "current": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        },
        "detail": {
          "type": "any",
          "required": true,
          "input": "fromCaller"
        }
      },
      "root": "disableRowEditExit",
      "actions": {
        "assignJobSalaryRange": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.currentRowBuffer": {
              "source": {
                "jobObject": {
                  "items": [
                    "{{ $chain.results.getJobDetail.body }}"
                  ]
                }
              },
              "reset": "none",
              "auto": "always",
              "mapping": {
                "$target.jobObject": {
                  "source": "$source.jobObject",
                  "reset": "none",
                  "auto": "always",
                  "mapping": {
                    "$target.items": {
                      "source": "$source.items",
                      "reset": "empty",
                      "auto": "always"
                    }
                  }
                }
              }
            },
            "$page.variables.disableRowEditExit": {
              "source": "{{ false }}"
            }
          }
        },
        "getJobDetail": {
          "module": "vb/action/builtin/restAction",
          "parameters": {
            "endpoint": "businessObjects/get_Job",
            "uriParams": {
              "Job_Id": "{{ $chain.variables.detail.value }}"
            }
          },
          "outcomes": {
            "success": "assignJobSalaryRange"
          }
        },
        "disableRowEditExit": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.disableRowEditExit": {
              "source": "{{ true }}"
            }
          },
          "outcomes": {
            "success": "getJobDetail"
          }
        }
      }
    },
    "DeleteRow": {
      "description": "",
      "variables": {
        "detail": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        },
        "key": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        },
        "index": {
          "required": true,
          "type": "number",
          "input": "fromCaller"
        },
        "current": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        }
      },
      "root": "updateDP",
      "actions": {
        "markRowDeleted": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.rowStatus[$chain.variables.key]": {
              "source": "deleted"
            }
          }
        },
        "updateDP": {
          "module": "vb/action/builtin/fireDataProviderEventAction",
          "parameters": {
            "remove": {
              "keys": "{{ [$chain.variables.key] }}"
            },
            "target": "[[ $page.variables.employeesADP ]]"
          },
          "outcomes": {
            "success": "isThisInsertedRow"
          }
        },
        "isThisInsertedRow": {
          "module": "vb/action/builtin/ifAction",
          "parameters": {
            "condition": "{{ $page.variables.rowStatus[$chain.variables.key] === 'inserted' }}"
          },
          "outcomes": {
            "false": "markRowDeleted",
            "true": "removeRowFromChanges"
          }
        },
        "removeRowFromChanges": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.rowStatus[$chain.variables.key]": {
              "source": "{{ undefined }}"
            }
          }
        }
      }
    },
    "InsertRow": {
      "description": "",
      "variables": {
        "detail": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        },
        "blankRecord": {
          "type": "EmployeeType",
          "defaultValue": {
            "jobObject": {
              "items": [
                {
                  "jobTitle": ""
                }
              ]
            },
            "job": 0
          }
        }
      },
      "root": "createBlankRecordWithUniqueID",
      "actions": {
        "createBlankRecordWithUniqueID": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$chain.variables.blankRecord": {
              "source": {
                "id": "{{ $page.functions.getNextId($page.variables.employeesADP.data) }}"
              },
              "reset": "none",
              "auto": "always"
            }
          },
          "outcomes": {
            "success": "insertRecordIntoDP"
          }
        },
        "insertRecordIntoDP": {
          "module": "vb/action/builtin/fireDataProviderEventAction",
          "parameters": {
            "target": "[[ $page.variables.employeesADP ]]",
            "add": {
              "data": "{{ [$chain.variables.blankRecord] }}",
              "keys": "{{ [$chain.variables.blankRecord.id] }}"
            }
          },
          "outcomes": {
            "success": "markRecordAsNewlyInserted"
          }
        },
        "markRecordAsNewlyInserted": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.rowStatus[$chain.variables.blankRecord.id]": {
              "source": "inserted"
            }
          },
          "outcomes": {
            "success": "selectNewRowAndMakeItEditable"
          }
        },
        "selectNewRowAndMakeItEditable": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.editRow": {
              "source": "{{ {rowKey: $chain.variables.blankRecord.id} }}"
            },
            "$page.variables.scrollPosition": {
              "source": "{{ {rowKey: $chain.variables.blankRecord.id} }}"
            }
          }
        }
    }
    },
    "SaveChanges": {
      "description": "",
      "variables": {
        "detail": {
          "required": true,
          "type": "any",
          "input": "fromCaller"
        }
      },
      "root": "createPayload",
      "actions": {
        "createPayload": {
          "module": "vb/action/builtin/callModuleFunctionAction",
          "parameters": {
            "module": "[[ $page.functions ]]",
            "functionName": "createBatchPayload",
            "params": [
              "{{ $page.variables.employeesADP.data }}",
              "{{ $page.variables.rowStatus }}"
            ]
          },
          "outcomes": {
            "success": "saveChangesInBatch"
          }
        },
        "saveChangesInBatch": {
          "module": "vb/action/builtin/restAction",
          "parameters": {
            "endpoint": "businessObjects/batch",
            "body": "{{ $chain.results.createPayload }}"
          },
          "outcomes": {
            "failure": "fireError",
            "success": "fireSuccess"
          }
        },
        "reloadTableAfterBatchChange": {
          "module": "vb/action/builtin/callChainAction",
          "parameters": {
            "id": "FetchEmployees"
          }
        },
        "fireError": {
          "module": "vb/action/builtin/fireNotificationEventAction",
          "parameters": {
            "target": "leaf",
            "summary": "[[ $chain.results.saveChangesInBatch.message.summary ]]",
            "type": "error",
            "displayMode": "persist"
          }
        },
        "fireSuccess": {
          "module": "vb/action/builtin/fireNotificationEventAction",
          "parameters": {
            "target": "leaf",
            "displayMode": "transient",
            "type": "info",
            "summary": "Changes were saved"
          },
          "outcomes": {
            "success": "resetAllChanges"
          }
        },
        "resetAllChanges": {
          "module": "vb/action/builtin/resetVariablesAction",
          "parameters": {
            "variables": [
              "$page.variables.rowStatus"
            ]
          },
          "outcomes": {
            "success": "reloadTableAfterBatchChange"
          }
        }
    }
    },
    "FetchEmployees": {
      "root": "fetchEmployees",
      "description": "",
      "actions": {
        "fetchEmployees": {
          "module": "vb/action/builtin/restAction",
          "parameters": {
            "endpoint": "businessObjects/getall_Employee",
            "requestTransformOptions": {
              "paginate": {
                "size": -1
              }
            },
            "responseType": "getall_Employee",
            "uriParams": {
              "orderBy": "lastName"
            }
          },
          "outcomes": {
            "success": "assignToEmployees"
          }
        },
        "assignToEmployees": {
          "module": "vb/action/builtin/assignVariablesAction",
          "parameters": {
            "$page.variables.employeesADP": {
              "source": {
                "data": "{{ $chain.results.fetchEmployees.body.items }}"
              },
              "reset": "none",
              "auto": "always",
              "mapping": {
                "$target.data": {
                  "source": "$source.data",
                  "reset": "empty"
                }
              }
            }
          }
        }
      }
    }
  },
  "eventListeners":{
    "vbEnter": {
      "chains": [{
        "chainId": "FetchEmployees",
        "parameters": {}
      }]
    },
    "ojTable18296469261OjBeforeRowEdit": {
      "chains": [{
        "chainId": "TableBeforeRowEditChain",
        "parameters": {
          "rowData": "{{$event.detail.rowContext.componentElement.getDataForVisibleRow($event.detail.rowContext.status.rowIndex).data}}"
        }
      }]
    },
    "ojTable18296469261OjBeforeRowEditEnd": {
			"preventDefault": "{{ $page.variables.disableRowEditExit || !$page.functions.isFormValid($event.detail, $event) }}",
      "chains": [{
        "chainId": "TableBeforeRowEditEndChain",
        "parameters": {
          "rowKey": "{{$event.detail.rowContext.status.rowKey}}",
          "rowData": "{{$page.variables.currentRowBuffer}}",
          "originalRowData": "{{$event.detail.rowContext.componentElement.getDataForVisibleRow($event.detail.rowContext.status.rowIndex).data}}",
          "event": "{{ $event }}"
        }
      }]
    },
    "ojSelectSingleValue": {
      "chains": [{
        "chainId": "JobChanged",
        "parameters": {
          "value": "{{ $event.detail.value }}",
          "key": "{{ $current.key }}",
          "index": "{{ $current.index }}",
          "current": "{{ $current }}",
          "detail": "{{ $event.detail }}"
        }
      }]
    },
    "ojButtonOjAction": {
      "chains": [
        {
          "chainId": "DeleteRow",
          "parameters": {
            "detail": "{{ $event.detail }}",
            "key": "{{ $current.key }}",
            "index": "{{ $current.index }}",
            "current": "{{ $current }}"
          }
        }
      ]
    },
    "ojButtonOjAction2": {
      "chains": [
        {
          "chainId": "InsertRow",
          "parameters": {
            "detail": "{{ $event.detail }}"
          }
        }
      ]
    },
    "ojButtonOjAction3": {
      "chains": [
        {
          "chainId": "SaveChanges",
          "parameters": {
            "detail": "{{ $event.detail }}"
          }
        }
      ]
    }

  },
  "imports": {
    "components": {
      "oj-select-single": {
        "path": "ojs/ojselectsingle"
      },
      "oj-table": {
        "path": "ojs/ojtable"
      },
      "oj-input-text": {
        "path": "ojs/ojinputtext"
      },
      "oj-button": {
        "path": "ojs/ojbutton"
      },
      "oj-text-area": {
        "path": "ojs/ojinputtext"
      }
    },
    "modules": {
      "ojValidationBase": {
        "path": "ojs/ojvalidation-base"
      }
    }
  }
}